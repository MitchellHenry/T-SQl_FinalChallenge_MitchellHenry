/*
Deployment script for Final_T-SQL_DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Final_T-SQL_DB"
:setvar DefaultFilePrefix "Final_T-SQL_DB"
:setvar DefaultDataPath "C:\Users\Mitchell\AppData\Local\Microsoft\VisualStudio\SSDT\Final_T-SQL_DB"
:setvar DefaultLogPath "C:\Users\Mitchell\AppData\Local\Microsoft\VisualStudio\SSDT\Final_T-SQL_DB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column SaleDate in table [dbo].[Sale] is currently  INT NOT NULL but is being changed to  DATE NOT NULL. There is no implicit or explicit conversion.
*/

IF EXISTS (select top 1 1 from [dbo].[Sale])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping unnamed constraint on [dbo].[Sale]...';


GO
ALTER TABLE [dbo].[Sale] DROP CONSTRAINT [FK__Sale__RecordID__29572725];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Sale]...';


GO
ALTER TABLE [dbo].[Sale] DROP CONSTRAINT [FK__Sale__CustNo__2A4B4B5E];


GO
PRINT N'Starting rebuilding table [dbo].[Sale]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Sale] (
    [SaleDate]  DATE          NOT NULL,
    [PricePaid] MONEY         NOT NULL,
    [RecordID]  NVARCHAR (50) NOT NULL,
    [CustNo]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([SaleDate] ASC, [RecordID] ASC, [CustNo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Sale])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Sale] ([SaleDate], [RecordID], [CustNo], [PricePaid])
        SELECT   [SaleDate],
                 [RecordID],
                 [CustNo],
                 [PricePaid]
        FROM     [dbo].[Sale]
        ORDER BY [SaleDate] ASC, [RecordID] ASC, [CustNo] ASC;
    END

DROP TABLE [dbo].[Sale];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sale]', N'Sale';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating unnamed constraint on [dbo].[Sale]...';


GO
ALTER TABLE [dbo].[Sale] WITH NOCHECK
    ADD FOREIGN KEY ([RecordID]) REFERENCES [dbo].[Record] ([RecordID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Sale]...';


GO
ALTER TABLE [dbo].[Sale] WITH NOCHECK
    ADD FOREIGN KEY ([CustNo]) REFERENCES [dbo].[Customer] ([CustNo]);


GO

DELETE FROM Sale;
DELETE FROM Customer;
DELETE FROM Special_Interests;
DELETE FROM Record;

INSERT INTO Special_Interests(InterestCode,InterestDesc)
VALUES('RR','Rock and Roll'),
('JA','Jazz'),
('RB','Rhythm and Blues');

INSERT INTO Record(RecordID,Title,Performer)
VALUES('PF003','The Wall','Pink Floyed'),
('IX002','Kick','IXNS'),
('SP069','Never Mind The Bollocks','Sex Pistols'),
('PF002','Dark Side of the Moon','Pink Floyed'),
('IX005','Shabooh Shoobah','INXS'),
('SP070','Floggin a Dead Horse','Sex Pistols'),
('PF004','The Endless River','Pink Floyed'),
('PF006','Wish You Were Here','Pink Floyed'),
('SP075','Agents of Anarchy','Sex Pistols'),
('PF007','The Division Bell','Pink Floyed');

INSERT INTO Customer(CustNo,CustName,CustAddress,PostCode,InterestCode)
VALUES(123,'Jimmy Barnes','1 Sesame Street',3000,'RR'),
(456,'Ian Moss','10 Downing Street',4000,'JA'),
(789,'Don Walker','221B Baker Street',5000,'RB'),
(234,'Steve Prestwich','LG1 College Cres, Parkville',6000,'RR'),
(567,'Phil Small','1 Adelaide Avenue',7000,'RB');

INSERT INTO Sale(SaleDate,PricePaid,RecordID,CustNo)
VALUES('1-Dec-2015',30.00,'PF003',123),
('1-Dec-2015',29.95,'IX002',123),
('2-Dec-2015',12.45,'SP069',123),
('5-Dec-2015',30.00,'IX002',123),
('1-Dec-2015',31.00,'PF002',456),
('3-Dec-2015',28.95,'IX005',456),
('6-Dec-2015',13.45,'SP070',456),
('2-Dec-2015',29.00,'PF004',789),
('3-Dec-2015',29.95,'IX002',789),
('1-Dec-2015',45.00,'PF006',234),
('4-Dec-2015',5.67,'SP075',234),
('3-Dec-2015',9.95,'PF007',567);

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Sale'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
